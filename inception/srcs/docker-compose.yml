services:
  nginx:
    container_name: nginx
    image: nginx
    build:
      context: ./requirements/nginx/
      args:
        - WEB_SERVER_CERT_PATH=${WEB_SERVER_CERT_PATH}
        - WEB_SERVER_KEY_PATH=${WEB_SERVER_KEY_PATH}
        - DOMAIN_NAME=${DOMAIN_NAME}
        - DOMAIN_NAME_BONUS=${DOMAIN_NAME_BONUS}
    ports: [443:443]
    depends_on:
      wordpress: {condition: service_healthy}
      rust: {condition: service_healthy}
      adminer: {condition: service_healthy}
    volumes:
      - wordpress-content:/var/www/html/wordpress/
    networks: 
      - nginx_wordpress
      - nginx_rust
      - nginx_adminer
      - nginx_exporter
      - nginx_k6
    healthcheck:
      test: ["CMD", "curl", "-k", "--silent", "https://localhost:443/"]
      interval: 5s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  mariadb:
    container_name: mariadb
    image: mariadb
    build:
      context: ./requirements/mariadb/
      args:
        - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
        - MARIADB_USER=${MARIADB_USER}
        - MARIADB_PASSWORD=${MARIADB_PASSWORD}
        - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      - wordpress_mariadb
      - adminer_mariadb
    volumes:
      - mariadb-data:/var/lib/mysql/
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 5s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  wordpress:
    container_name: wordpress
    image: wordpress
    build:
      context: ./requirements/wordpress/
      args:
        - DOMAIN_NAME=${DOMAIN_NAME}
        - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
        - MARIADB_USER=${MARIADB_USER}
        - MARIADB_PASSWORD=${MARIADB_PASSWORD}
        - WORDPRESS_TITLE=${WORDPRESS_TITLE}
        - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
        - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
        - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
        - WORDPRESS_NORMAL_USER=${WORDPRESS_NORMAL_USER}
        - WORDPRESS_NORMAL_PASSWORD=${WORDPRESS_NORMAL_PASSWORD}
        - WORDPRESS_NORMAL_EMAIL=${WORDPRESS_NORMAL_EMAIL}
    depends_on:
      mariadb: {condition: service_healthy}
      redis: {condition: service_healthy}
    networks:
      - wordpress_mariadb
      - nginx_wordpress
      - wordpress_redis
    volumes:
      - wordpress-content:/var/www/html/wordpress/
    healthcheck:
      test: ["CMD", "pgrep", "php-fpm"]
      interval: 5s
      start_period: 60s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  rust:
    container_name: rust
    image: rust
    build:
      context: ./requirements/bonus/rust/
    networks:
      - nginx_rust
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://127.0.0.1:4000/"]
      interval: 5s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  redis:
    image: redis
    container_name: redis
    build:
      context: ./requirements/bonus/redis/
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
    networks:
      - wordpress_redis
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  adminer:
    container_name: adminer
    image: adminer
    build:
      context: ./requirements/bonus/adminer/
    depends_on:
      mariadb: {condition: service_healthy}
    networks:
      - nginx_adminer
      - adminer_mariadb
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://127.0.0.1:5000/"]
      interval: 5s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  ftp:
    container_name: ftp
    image: ftp
    build:
      context: ./requirements/bonus/ftp/
      args:
        - FTP_USER=$FTP_USER
        - FTP_PASSWORD=$FTP_PASSWORD
    ports:
      - 21:21
      - 10000-10010:10000-10010
    healthcheck:
      test: ["CMD", "ftp", "localhost"]
      interval: 5s
    volumes:
      - wordpress-content:/var/www/html/
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  exporter:
    container_name: exporter
    image: exporter
    build:
      context: ./requirements/bonus/exporter/
    depends_on:
      nginx: {condition: service_healthy}
    networks:
      - nginx_exporter
      - monitor
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9113/metrics"]
      interval: 5s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  prometheus:
    container_name: prometheus
    image: prometheus
    build:
      context: ./requirements/bonus/prometheus/
    networks:
      - monitor
    depends_on:
      exporter: {condition: service_healthy}
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://localhost:9090"]
      interval: 5s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

  grafana:
    container_name: grafana
    image: grafana
    build:
      context: ./requirements/bonus/grafana/
    depends_on:
      prometheus:
        condition: service_healthy
    ports: [3000:3000]
    networks:
      - monitor
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://localhost:3000/login"]
      interval: 5s
      start_period: 60s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3
    mem_limit: 2g
    cpus: '2.0'

  k6:
    container_name: k6
    image: k6
    build:
      context: ./requirements/bonus/k6/
    depends_on:
      grafana: {condition: service_healthy}
    networks:
      - nginx_k6
    healthcheck:
      test: ["CMD", "curl", "-k", "--silent", "https://nginx:443/"]
      interval: 5s
    tmpfs: [/tmp, /run]
    privileged: true
    restart: on-failure
    stop_signal: SIGRTMIN+3

networks:
  nginx_wordpress: {name: nginx_wordpress}
  wordpress_mariadb: {name: wordpress_mariadb}
  nginx_rust: {name: nginx_rust}
  wordpress_redis: {name: wordpress_redis}
  nginx_adminer: {name: nginx_adminer}
  adminer_mariadb: {name: adminer_mariadb}
  nginx_exporter: {name: nginx_exporter}
  monitor: {name: monitor}
  nginx_k6: {name: nginx_k6}

volumes:
  wordpress-content:
    name: wordpress-content
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/wordpress
  mariadb-data:
    name: mariadb-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/mariadb
